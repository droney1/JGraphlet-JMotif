#//This experiment setup file is for directed temporal network
#//***********************************************
#//The First 2 lines are expName xxx; outDir xxx
#// where expName is the name of the experiment
# outDir is the output folder of the results
expName	testTemporalNet
outDir	../../experimentResult
#***********************************************
#each line contains parameter for a operation such as compute triad frequences for a snapshot 
#	snapshot means the operation is based on a snapshot of the temporal graph, the second parameter 0 mean we do operation on snapshot 0 of the graph
#	randomgraphIOSeqCompareMotifFreqAlg is a command to compare the motif Frequencey algorithms, the 3 means 3-node subgraph motif, 10 is for generate 10 random graphs with the same in out degree sequence
#snapshot 0 randomGraphIOSeqCompareMotifFreqAlg 	3	10
#
#-----------------------------------------------
#0. "getRandomGraphInfo"
#		obtain the information of the random graph and save it to a file:
#		line1: number of nodes
#		line2: number of edges
#		line3: in degree seq
#		line4: out degree seq
#		line5: numNode	numEdge		expected_in/out_degree		secondMomentOfInDegree		secondMomentOfOutDegree		ExpectedProbOfDirectedEdge	numOfUniqueJointInOutDegree max_In_DEgree	Max_Out_Degree
#Example:
snapshot -1 joinInOutDegree	getRandomGraphInfo
#snapshot -1 reciprocalInOutDegree	getRandomGraphInfo
#snapshot -1 numNodeEdge	getRandomGraphInfo
#snapshot -1 MANPairModel	getRandomGraphInfo
#-----------------------------------------------
#2. "ExpectedTriadFreqOptTime	a	b 	c"
#		A command to compute triad frequency in random graph with the opt=k-th method of calculating node connection. 
#		a=[3, 4] means a-node subgraph motif, 
#		b=[0,1,..3] choose the b-th method to compute the probability of a directed edge in configuration model.
#		c=[1,...) repeat this experiment for c times
#Example:
snapshot -1	joinInOutDegree	ExpectedTriadFreq	3	1
snapshot 1	reciprocalInOutDegree	ExpectedTriadFreq	3	1
snapshot 1	numNodeEdge ExpectedTriadFreq	3	1
snapshot 1	MANPairModel	ExpectedTriadFreq	3	1
#3. "SampleGraphMotifFreq	a	b"
#		A command to compute triad frequency in random graph by simulation: generate b random graphs and count the frequency for each motif type and return b arrays of motif frequencies. 
#		a=[3, 4] means a-node subgraph motif, 
#		b=[1,...) repeat this experiment for b times
#Example:
snapshot	-1	joinInOutDegree	SampleGraphMotifFreq	3	10
snapshot	1	reciprocalInOutDegree	SampleGraphMotifFreq	3	10
snapshot	1	numNodeEdge	SampleGraphMotifFreq	3	10
snapshot	1	MANPairModel	SampleGraphMotifFreq	3	10
#4. "motifCensus"
#		Compute the motif census for the current snapshot. 
#Example:
snapshot	-1	joinInOutDegree	motifCensus
snapshot	1	reciprocalInOutDegree	motifCensu
snapshot	1	numNodeEdge	motifCensus
snapshot	1	MANPairModel	motifCensus
#4. "generateRandomGraph x"
#		generate random graph for x times and output to x files.
#		x=[1,...) repeat this experiment for b times 
#Example:
snapshot	-1	joinInOutDegree	generateRandomGraph	1
snapshot	1	reciprocalInOutDegree	generateRandomGraph	3
snapshot	1	numNodeEdge	generateRandomGraph	2
snapshot	1	MANPairModel	generateRandomGraph	2
